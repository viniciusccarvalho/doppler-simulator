 server:
    port: 9090

 simulator:

   #default: 100
   events-per-second: 1000

   #How many hosts you want simulate for each metric being generated. This will map to the Envelope index and ip (each resource gets an unique IP from the simulator)
   #Add as many resources as you would like to have as sources of metrics
   #Note that you need to have the resources declared in this section if you want to use them on metrics declaration bellow
   resources:
     - name: router
       size: 2
     - name: dea
       size: 8
     - name: nats
       size: 2

   # Yaml Polymorphic collections is not easy to grasp, this is why each metric is represented as a high level entity
   counterEvent:
    # List of resources you want to emit this type of metric.
    resources: ["nats"]
    #Weight of this metric compared to other metrics in this simulation
    weight: 2
    # A list of possible CounterEvent metrics that will be generated for each time simulation.data() is called
    metrics:
      - name: "messages.sent"
        min: 0
        max: 100
        weight: 1


   valueMetric:
    # List of resources from the resourcePool you want to generate metrics from
    resources: ["router","dea","nats"]
    weight: 3
    #List of all possible metrics that can be created for this type
    metrics:
      - name: cpu
        min: 0
        max: 100
        weight: 10
        unit: "percent"
      - name: memory
        min: 1048576
        max: 4294967296
        weight: 10
        unit: "B"
      - name: openfiles
        min: 1
        max: 1024
        weight: 1
        unit: "unit"


   containerMetric:
    resources: ["dea"]
    weight: 2
